[{"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\index.tsx":"1","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\reportWebVitals.ts":"2","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\App.tsx":"3","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Views\\ChoosePlan.tsx":"4","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Views\\ConfirmInfo.tsx":"5","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Views\\Home.tsx":"6","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Views\\Thanks.tsx":"7","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormCheck.tsx":"8","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Icons\\Clinic.tsx":"9","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Icons\\Security.tsx":"10","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Icons\\Mobile.tsx":"11","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Icons\\Money.tsx":"12","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormInfoDni.tsx":"13","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormChooseProtect.tsx":"14","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormSIgnUp.tsx":"15","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormFamily.tsx":"16"},{"size":501,"mtime":1611182483043,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":2220,"mtime":1611968331820,"results":"20","hashOfConfig":"18"},{"size":1670,"mtime":1611186996339,"results":"21","hashOfConfig":"18"},{"size":1874,"mtime":1611282830070,"results":"22","hashOfConfig":"18"},{"size":3284,"mtime":1611285512346,"results":"23","hashOfConfig":"18"},{"size":2417,"mtime":1611286613057,"results":"24","hashOfConfig":"18"},{"size":9833,"mtime":1611970140921,"results":"25","hashOfConfig":"18"},{"size":931,"mtime":1611184990707,"results":"26","hashOfConfig":"18"},{"size":590,"mtime":1611185014823,"results":"27","hashOfConfig":"18"},{"size":864,"mtime":1611184998529,"results":"28","hashOfConfig":"18"},{"size":2028,"mtime":1611185005068,"results":"29","hashOfConfig":"18"},{"size":10333,"mtime":1611958247729,"results":"30","hashOfConfig":"18"},{"size":8155,"mtime":1611970747490,"results":"31","hashOfConfig":"18"},{"size":5142,"mtime":1611287950495,"results":"32","hashOfConfig":"18"},{"size":6211,"mtime":1611288644427,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1uaffkn",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\index.tsx",[],["73","74"],"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\reportWebVitals.ts",[],"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\App.tsx",[],"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Views\\ChoosePlan.tsx",["75"],"import React from 'react';\r\n\r\n// component\r\nimport FormChooseProtect from './../Components/FormChooseProtect';\r\n\r\n// material ui\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\n// imgs\r\nimport BgRedBig from './../Assets/Basebgbig.png';\r\nimport BgRedThin from './../Assets/Basebgthin.png';\r\nimport Family from './../Assets/family.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    \"& .bgRedBig\": {\r\n      zIndex: \"1\",\r\n      position: \"absolute\"\r\n    }\r\n  },\r\n  imgBgRedBig: {\r\n    height: \"47vh\",\r\n    width: \"60vw\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      height: \"100vh\",\r\n      width: \"30vw\",\r\n    },\r\n  },\r\n  formContainer: {\r\n    justifyContent: \"center\",\r\n    marginTop: \"40px\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: \"0px\",\r\n    },\r\n  }\r\n}))\r\n\r\nfunction ChoosePlan() {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className=\"bgRedBig\">\r\n        <img src={BgRedBig} alt=\"logo\" className={classes.imgBgRedBig} />\r\n      </div>\r\n      <Grid container spacing={0} className='main__container'>\r\n        <Grid container item lg={2} md={2} sm={5} xs={4} spacing={0} className='home__content' alignItems=\"center\">\r\n        </Grid>\r\n        <Grid container item lg={2} md={2} sm={7} xs={8} className='home__img' alignItems=\"center\">\r\n          <img src={Family} alt=\"logo\" />\r\n        </Grid>\r\n        <Grid container item lg={8} md={8} sm={12} xs={12} alignItems=\"center\" className={classes.formContainer}>\r\n          <FormChooseProtect />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChoosePlan;","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Views\\ConfirmInfo.tsx",["76"],"import React, { useContext } from 'react';\r\nimport { Context } from '../App'\r\n\r\n// components\r\nimport FormInfoDNI from './../Components/FormInfoDni';\r\nimport FormSignUp from '../Components/FormSIgnUp';\r\n\r\n// material ui\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\n// imgs\r\nimport BgRedBig from './../Assets/Basebgbig.png';\r\nimport BgRedThin from './../Assets/Basebgthin.png';\r\nimport Family from './../Assets/family.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    \"& .bgRedBig\": {\r\n      zIndex: \"1\",\r\n      position: \"absolute\"\r\n    }\r\n  },\r\n  imgBgRedBig: {\r\n    height: \"47vh\",\r\n    width: \"60vw\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      height: \"100vh\",\r\n      width: \"30vw\",\r\n    },\r\n  },\r\n  formContainer: {\r\n    justifyContent: \"center\",\r\n    marginTop: \"40px\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: \"0px\",\r\n    },\r\n  }\r\n}))\r\n\r\nfunction ConfirmInfo() {\r\n  const { userExist } = useContext(Context)\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className=\"bgRedBig\">\r\n        <img src={BgRedBig} alt=\"logo\" className={classes.imgBgRedBig} />\r\n      </div>\r\n      <Grid container spacing={0} className='main__container'>\r\n        <Grid container item lg={2} md={2} sm={5} xs={4} spacing={0} className='home__content' alignItems=\"center\">\r\n        </Grid>\r\n        <Grid container item lg={2} md={2} sm={7} xs={8} className='home__img' alignItems=\"center\">\r\n          <img src={Family} alt=\"logo\" />\r\n        </Grid>\r\n        <Grid container item lg={8} md={8} sm={12} xs={12} alignItems=\"center\" className={classes.formContainer}>\r\n          {userExist ?\r\n            <FormInfoDNI />\r\n            : <FormSignUp />\r\n          }\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConfirmInfo;","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Views\\Home.tsx",["77"],"import React from 'react';\r\n\r\n// components\r\nimport FormCheck from './../Components/FormCheck'\r\n\r\n// material ui\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\n// imgs\r\nimport BgRedBig from './../Assets/Basebgbig.png';\r\nimport BgRedThin from './../Assets/Basebgthin.png';\r\nimport Family from './../Assets/family.png';\r\nimport Mobile from './../Icons/Mobile';\r\nimport Security from './../Icons/Security';\r\nimport Clinic from './../Icons/Clinic';\r\nimport Money from './../Icons/Money';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  home: {\r\n    \"& .BgRedBig\": {\r\n      zIndex: \"1\",\r\n      position: \"absolute\"\r\n    }\r\n  },\r\n  imgBgRedBig: {\r\n    height: \"48vh\",\r\n    width: \"100vw\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      height: \"90vh\",\r\n      width: \"50vw\",\r\n    },\r\n  },\r\n  titleWhite: {\r\n    fontSize: \"50px\",\r\n    color: \"#fff\",\r\n    fontWeight: 300,\r\n    \"& span\": {\r\n      fontWeight: 600,\r\n      display: \"block\"\r\n    },\r\n    \"& p\": {\r\n      color: \"#fff\"\r\n    }\r\n  },\r\n  items: {\r\n    color: \"#fff\",\r\n    lineHeight: \"25px\",\r\n    \"& img\": {\r\n      with: '22px',\r\n      height: '22px',\r\n      position: 'relative',\r\n      top: '5px',\r\n      paddingRight: '5px'\r\n    }\r\n  },\r\n  homeForm: {\r\n    justifyContent: \"center\",\r\n    marginTop: \"20px\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: \"0px\",\r\n    },\r\n    \"& h2\": {\r\n      color: \"#494F66\",\r\n      fontWeight: 400,\r\n      fontSize: \"30px\",\r\n      \"& span\": {\r\n        color: \"#EF3340\",\r\n        fontWeight: 600,\r\n      }\r\n    },\r\n    \"& p\": {\r\n      color: \"#C5CBE0\"\r\n    }\r\n  }\r\n}));\r\n\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.home}>\r\n      <div className=\"BgRedBig\">\r\n        <img src={BgRedBig} alt=\"logo\" className={classes.imgBgRedBig} />\r\n      </div>\r\n      <Grid container spacing={0} className='home__container main__container'>\r\n        <Grid container item lg={3} md={3} sm={6} xs={7} spacing={0} className='home__content' alignItems=\"center\">\r\n          <div>\r\n            <h1 className={classes.titleWhite}>Seguro de <span>Salud</span></h1>\r\n            <div className={classes.items}>\r\n              <p>\r\n                <Security />\r\n                Cómpralo de manera fácil y rápida\r\n              </p>\r\n              <p>\r\n                <Mobile />\r\n              Cotiza y compra tu seguro 100% digital</p>\r\n              <span></span>\r\n              <p>\r\n                <Money />\r\n                Hasta S/. 12 millones de cobertura anual\r\n              </p>\r\n              <p>\r\n                <Clinic />\r\n                Más de 300 clientes en todo el Perú\r\n                </p>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid container item lg={4} md={4} sm={4} xs={4} spacing={0} className='home__img' alignItems=\"flex-end\">\r\n          <img src={Family} alt=\"logo\" />\r\n        </Grid>\r\n        <Grid container item lg={4} md={5} sm={12} xs={12} spacing={0} alignItems=\"center\" className={classes.homeForm}>\r\n          <div>\r\n            <h2>Obten tu <span>seguro ahora</span></h2>\r\n            <p>Ingresa los datos para comenzar</p>\r\n            <FormCheck />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Views\\Thanks.tsx",["78","79","80"],"import React, { useContext, useEffect } from 'react';\r\nimport { Context } from './../App'\r\n\r\n// material ui\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n// imgs\r\nimport BgRedBig from './../Assets/Basebgbig.png';\r\nimport BgRedThin from './../Assets/Basebgthin.png';\r\nimport Family from './../Assets/family.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    \"& .bgRedBig\": {\r\n      zIndex: \"1\",\r\n      position: \"absolute\"\r\n    }\r\n  },\r\n  imgBgRedBig: {\r\n    height: \"47vh\",\r\n    width: \"60vw\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      height: \"100vh\",\r\n      width: \"30vw\",\r\n    },\r\n  },\r\n  textContainer: {\r\n    \"& h1\": {\r\n      color: \"#6E7385\",\r\n      \"& span\": {\r\n        color: \"#EF3340\"\r\n      }\r\n    },\r\n    \"& p\": {\r\n      color: \"#C5CBE0\",\r\n      \"& span\": {\r\n        fontWeight: \"600\"\r\n      }\r\n    }\r\n  }\r\n}))\r\n\r\nfunction Thanks() {\r\n  const classes = useStyles()\r\n  const { setData, setStep, setDataResponse, finalData, setFinalData, setWithFamily } = useContext(Context)\r\n  const goInitial = () => {\r\n    setData(undefined)\r\n    setDataResponse(undefined)\r\n    setFinalData(undefined)\r\n    setStep(0)\r\n    setWithFamily(false)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className=\"bgRedBig\">\r\n        <img src={BgRedBig} alt=\"fondo rojo\" className={classes.imgBgRedBig} />\r\n      </div>\r\n      <Grid container spacing={0} className='main__container'>\r\n        <Grid container item lg={2} md={2} sm={5} xs={4} spacing={0} className='home__content' alignItems=\"center\">\r\n        </Grid>\r\n        <Grid container item lg={2} md={2} sm={7} xs={8} className='home__img' alignItems=\"center\">\r\n          <img src={Family} alt=\"imagen de familia\" />\r\n        </Grid>\r\n        <Grid container item lg={8} md={8} sm={12} xs={12} alignItems=\"center\">\r\n          <div className={classes.textContainer}>\r\n            <h1>!Gracias por <span>confiar en nosotros!</span></h1>\r\n            <p>Queremos conocer mejor la salud de los asegurados. un asesor <span>se pondrá en contacto </span> contigoen las siguientes <span>48 horas</span></p>\r\n          </div>\r\n          <div>\r\n            <Button className=\"form__button\" onClick={goInitial}>IR A SALUD</Button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Thanks;","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormCheck.tsx",["81","82"],"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Icons\\Clinic.tsx",[],"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Icons\\Security.tsx",[],"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Icons\\Mobile.tsx",[],"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Icons\\Money.tsx",[],"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormInfoDni.tsx",["83","84","85"],"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormChooseProtect.tsx",["86","87","88"],"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormSIgnUp.tsx",["89","90","91","92"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Context } from '../App'\r\n\r\n//components \r\nimport FormFamily from './FormFamily';\r\n\r\n// material ui\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\n// form\r\nimport * as Yup from 'yup'\r\nimport { useFormik } from 'formik'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputRegular: {\r\n    width: \"100%\",\r\n    marginTop: '8px',\r\n    \"& .MuiFilledInput-root\": {\r\n      backgroundColor: '#fff',\r\n    },\r\n    \"& .MuiFilledInput-underline:before\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiFilledInput-underline:after\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiFormLabel-root.Mui-focused\": {\r\n      color: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n    \"&.MuiFormControl-root\": {\r\n      border: \"1px solid #C4C4C4\",\r\n      borderRadius: \"4px\"\r\n    },\r\n    \"& .MuiFilledInput-input\": {\r\n      padding: \"25px 14.5px 10px\"\r\n    }\r\n  },\r\n  inputRadio: {\r\n    marginTop: \"15px\",\r\n    \"& .MuiRadio-colorSecondary.Mui-checked\": {\r\n      color: \"#83CC5E\"\r\n    }\r\n  },\r\n  indications: {\r\n    \"& h1\": {\r\n      color: '#494F66',\r\n      \"& span\": {\r\n        color: \"#EF3340\",\r\n        textTransform: 'capitalize'\r\n      }\r\n    },\r\n    \"& p:nth-of-type(1)\": {\r\n      color: \"#676F8F\",\r\n      fontWeight: \"300\",\r\n      fontSize: \"16px\"\r\n    },\r\n    \"& p:nth-of-type(2)\": {\r\n      color: \"#494F66\",\r\n      fontSize: \"20px\",\r\n      marginTop: \"30px\",\r\n      marginBotton: 5\r\n    }\r\n  }\r\n}))\r\n\r\nconst Schema = Yup.object().shape({\r\n  names: Yup.string()\r\n    .required('Completar campo'),\r\n  typeInsurance: Yup.string().required('Seleccionar el tipo de seguro')\r\n});\r\n\r\ntype InitialValues = {\r\n  names: string,\r\n  typeInsurance: string\r\n}\r\n\r\nfunction FormSignUp() {\r\n\r\n  const classes = useStyles()\r\n  const { setStep, dataResponse, setDataResponse, userExist, withFamily, setWithFamily, formFamilyValid, setFormFamilyValid } = useContext(Context)\r\n\r\n  const initialValues: InitialValues = {\r\n    names: '',\r\n    typeInsurance: ''\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      setDataResponse(values)\r\n      setStep(2)\r\n    }\r\n  })\r\n  const backInitial = () => setStep(0)\r\n\r\n  const setTypeInsurance = (val: any) => {\r\n    const value = val.target.value\r\n    if (value === 'family') {\r\n      setWithFamily(true)\r\n      setFormFamilyValid(false)\r\n    } else {\r\n      setWithFamily(false)\r\n      setFormFamilyValid(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // (() => formik.validateForm())();\r\n    if (dataResponse && !userExist) {\r\n      formik.setValues(dataResponse)\r\n    }\r\n  }, [dataResponse])\r\n\r\n  return (\r\n    <div className='form__container'>\r\n      <div className='next-step'>\r\n        <span onClick={backInitial}> <ArrowBackIosIcon style={{ fontSize: 12, color: '#EF3340' }} /></span>\r\n        <span>Paso 1 </span>\r\n        <span>de 7</span>\r\n      </div>\r\n      <div className={classes.indications}>\r\n        <h1>Hola, <span>¡empecemos!</span></h1>\r\n        <p>Cuéntanos un poco sobre ti</p>\r\n        <p>Ingresa tu nombre</p>\r\n      </div>\r\n      <div className='form__content'>\r\n        <form onSubmit={formik.handleSubmit} >\r\n          <TextField id=\"names\" name=\"names\" onChange={formik.handleChange} value={formik.values.names} label=\"Nombres\" variant=\"filled\" className={classes.inputRegular} />\r\n\r\n          <FormControl component=\"fieldset\" className={classes.inputRadio}>\r\n            <FormLabel component=\"legend\">¿A quiénes vamos a asegurar?</FormLabel>\r\n            <RadioGroup id=\"typeInsurance\" aria-label=\"typeInsurance\" name=\"typeInsurance\" value={formik.values.typeInsurance} onChange={e => { setTypeInsurance(e); formik.handleChange(e) }}>\r\n              <FormControlLabel value=\"me\" control={<Radio />} label=\"Solo a mí\" />\r\n              <FormControlLabel value=\"family\" control={<Radio />} label=\"A mí y a mi familia\" />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {withFamily && (<FormFamily />)}\r\n          {/* {formik.errors.typeInsurance && (\r\n                  <span>{formik.errors.typeInsurance}</span>\r\n              )} */}\r\n          <div>\r\n            <Button type=\"submit\" disabled={!formik.isValid || !formFamilyValid} className={`form__button ${formik.isValid && formFamilyValid ? \"form__button--salud\" : \"form__button--disabled\"}`}>\r\n              Continuar <NavigateNextIcon />\r\n            </Button>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormSignUp;","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormFamily.tsx",["93","94","95","96","97","98"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Context } from '../App'\r\n\r\n// material ui\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { format } from 'date-fns';\r\n\r\n// form\r\nimport * as Yup from 'yup'\r\nimport { useFormik } from 'formik'\r\n\r\nimport { v4 as uuid } from 'uuid';\r\nimport { isTemplateExpression } from 'typescript';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: \"flex\",\r\n    marginLeft: \"0 !important\",\r\n    marginTop: \"0 !important\",\r\n    maxWidth: \"330px\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      maxWidth: \"400px\",\r\n    },\r\n  },\r\n  inputFamilyBond: {\r\n    \"& .MuiOutlinedInput-root\": {\r\n      borderRadius: \"4px 0 0 4px\",\r\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        borderColor: \"rgba(0, 0, 0, 0.23)\",\r\n        borderWidth: \"1px\"\r\n      },\r\n      \"& .MuiOutlinedInput-input\": {\r\n        padding: \"18.5px 30px 13px 14px\",\r\n      }\r\n    },\r\n    \"&.MuiFormControl-root\": {\r\n      marginTop: \"16px !important\"\r\n    }\r\n  },\r\n  inputDate: {\r\n    width: \"70%\",\r\n    \"& .MuiFilledInput-root\": {\r\n      backgroundColor: '#fff',\r\n    },\r\n    \"& .MuiInput-underline:before\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiFormLabel-root.Mui-focused\": {\r\n      color: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n    \"&.MuiFormControl-root\": {\r\n      border: \"1px solid #C4C4C4\",\r\n      borderRadius: \"0 4px 4px 0\"\r\n    },\r\n    \"& .MuiInputLabel-formControl\": {\r\n      left: \"15px\",\r\n    },\r\n  },\r\n  familyMember: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    borderBottom: \"1px solid #EDEFF5\",\r\n    minHeight: \"50px\",\r\n    color: \"#A9B1D1\"\r\n  }\r\n}));\r\n\r\nconst Schema = Yup.object().shape({\r\n  familyBond: Yup.string()\r\n    .required(''),\r\n  birthDate: Yup.date().required('')\r\n});\r\n\r\ntype InitialValues = {\r\n  familyBond: string;\r\n  birthDate: Date | null;\r\n}\r\n\r\ntype FamilyMember = {\r\n  id: number;\r\n  familyBond: string;\r\n  birthDate: Date | number;\r\n}\r\n\r\nfunction FormFamily() {\r\n  const classes = useStyles();\r\n  const { family, setFamily, setFormFamilyValid } = useContext(Context)\r\n  const initialValues: InitialValues = {\r\n    familyBond: 'Vínculo',\r\n    birthDate: null,\r\n  }\r\n\r\n  const addFamilyMember = (val: any) => {\r\n    const newId = uuid();\r\n    const newMember: FamilyMember = {\r\n      id: newId,\r\n      ...val\r\n    }\r\n    setFormFamilyValid(true)\r\n      setFamily([...family, newMember])\r\n\r\n    // if (family.length > 0) {\r\n    //   setFamily([...family, newMember])\r\n    // } else {\r\n    //   setFamily([newMember])\r\n    // }\r\n  }\r\n\r\n  const removeFamilyMember = (id: any) => {\r\n    const filteredItems = family.filter((item: { id: number; }) => item.id !== id);\r\n    setFamily(filteredItems)\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values) => {\r\n      // setData(values)\r\n      // setDataResponse(values)\r\n      addFamilyMember(values)\r\n      // resetForm()\r\n      console.log('se hizo saubmit');\r\n      // setFamily(values)\r\n    }\r\n  })\r\n\r\n  const abc = () => {\r\n    addFamilyMember(formik.values)\r\n  }\r\n\r\n  useEffect(() => {\r\n    (() => formik.validateForm())();\r\n  }, [family])\r\n\r\n  const documentType = [\r\n    {\r\n      value: 'Vínculo',\r\n      label: 'Vínculo',\r\n    },\r\n    {\r\n      value: 'Cónyuge',\r\n      label: 'Cónyuge',\r\n    },\r\n    {\r\n      value: 'Hijo',\r\n      label: 'Hijo',\r\n    }\r\n  ];\r\n  return (\r\n    <div>\r\n      <p>Datos de los familiares</p>\r\n      <form onSubmit={formik.handleSubmit} className={classes.form}>\r\n        <TextField\r\n          id=\"familyBond\"\r\n          select\r\n          name=\"familyBond\"\r\n          value={formik.values.familyBond}\r\n          onChange={formik.handleChange}\r\n          variant=\"outlined\"\r\n          error={Boolean(formik.errors.familyBond)}\r\n          helperText={formik.errors.familyBond}\r\n          className={classes.inputFamilyBond}\r\n        >\r\n          {documentType.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"MM/dd/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"birthDate\"\r\n            name=\"birthDate\"\r\n            label=\"Fecha de nacimiento\"\r\n            value={formik.values.birthDate}\r\n            error={Boolean(formik.errors.birthDate)}\r\n            onChange={value => formik.setFieldValue(\"birthDate\", value)}\r\n            className={classes.inputDate}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n        {/* <Button type=\"submit\" disabled={!formik.isValid} className={`form__button--add ${formik.isValid ? \"form__button--add-enable\" : \"form__button--add-disabled\"}`}>\r\n          Agregar\r\n        </Button> */}\r\n        <Button onClick={abc} disabled={!formik.isValid} className={`form__button--add ${formik.isValid ? \"form__button--add-enable\" : \"form__button--add-disabled\"}`}>\r\n          AGREGAR\r\n        </Button>\r\n      </form>\r\n      <div>\r\n        {!!family.length &&\r\n          (family.map((item: FamilyMember) => (\r\n            <div key={item.id} className={classes.familyMember}>\r\n              <span>{item.familyBond} </span>\r\n              <span>{format(item.birthDate, 'dd/MM/yyyy')}</span>\r\n              <Button onClick={() => removeFamilyMember(item.id)} className={`form__button--remove`}>\r\n                ELIMINAR\r\n              </Button>\r\n            </div>\r\n          )))\r\n        }\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormFamily;",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":12,"column":8,"nodeType":"105","messageId":"106","endLine":12,"endColumn":17},{"ruleId":"103","severity":1,"message":"104","line":14,"column":8,"nodeType":"105","messageId":"106","endLine":14,"endColumn":17},{"ruleId":"103","severity":1,"message":"104","line":12,"column":8,"nodeType":"105","messageId":"106","endLine":12,"endColumn":17},{"ruleId":"103","severity":1,"message":"107","line":1,"column":29,"nodeType":"105","messageId":"106","endLine":1,"endColumn":38},{"ruleId":"103","severity":1,"message":"104","line":12,"column":8,"nodeType":"105","messageId":"106","endLine":12,"endColumn":17},{"ruleId":"103","severity":1,"message":"108","line":48,"column":46,"nodeType":"105","messageId":"106","endLine":48,"endColumn":55},{"ruleId":"103","severity":1,"message":"109","line":23,"column":10,"nodeType":"105","messageId":"106","endLine":23,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":236,"column":6,"nodeType":"112","endLine":236,"endColumn":20,"suggestions":"113"},{"ruleId":"103","severity":1,"message":"114","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"115","line":13,"column":8,"nodeType":"105","messageId":"106","endLine":13,"endColumn":16},{"ruleId":"110","severity":1,"message":"116","line":218,"column":6,"nodeType":"112","endLine":218,"endColumn":20,"suggestions":"117"},{"ruleId":"103","severity":1,"message":"114","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"107","line":1,"column":39,"nodeType":"105","messageId":"106","endLine":1,"endColumn":48},{"ruleId":"103","severity":1,"message":"118","line":9,"column":8,"nodeType":"105","messageId":"106","endLine":9,"endColumn":19},{"ruleId":"103","severity":1,"message":"114","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"119","line":9,"column":8,"nodeType":"105","messageId":"106","endLine":9,"endColumn":16},{"ruleId":"103","severity":1,"message":"120","line":11,"column":8,"nodeType":"105","messageId":"106","endLine":11,"endColumn":12},{"ruleId":"110","severity":1,"message":"116","line":124,"column":6,"nodeType":"112","endLine":124,"endColumn":20,"suggestions":"121"},{"ruleId":"103","severity":1,"message":"114","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"122","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":24},{"ruleId":"103","severity":1,"message":"120","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":12},{"ruleId":"103","severity":1,"message":"115","line":10,"column":8,"nodeType":"105","messageId":"106","endLine":10,"endColumn":16},{"ruleId":"103","severity":1,"message":"123","line":24,"column":10,"nodeType":"105","messageId":"106","endLine":24,"endColumn":30},{"ruleId":"110","severity":1,"message":"111","line":148,"column":6,"nodeType":"112","endLine":148,"endColumn":14,"suggestions":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"@typescript-eslint/no-unused-vars","'BgRedThin' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'finalData' is assigned a value but never used.","'format' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array.","ArrayExpression",["127"],"'useState' is defined but never used.","'Checkbox' is defined but never used.","React Hook useEffect has missing dependencies: 'formik' and 'userExist'. Either include them or remove the dependency array.",["128"],"'FormControl' is defined but never used.","'MenuItem' is defined but never used.","'Grid' is defined but never used.",["129"],"'FormControlLabel' is defined but never used.","'isTemplateExpression' is defined but never used.",["130"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"133","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [dataResponse, formik]",{"range":"138","text":"139"},"Update the dependencies array to be: [dataResponse, formik, userExist]",{"range":"140","text":"141"},{"range":"142","text":"141"},"Update the dependencies array to be: [family, formik]",{"range":"143","text":"144"},[6382,6396],"[dataResponse, formik]",[5570,5584],"[dataResponse, formik, userExist]",[3251,3265],[3720,3728],"[family, formik]"]