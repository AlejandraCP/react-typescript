[{"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\index.tsx":"1","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\reportWebVitals.ts":"2","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\App.tsx":"3","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Views\\ChoosePlan.tsx":"4","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Views\\ConfirmInfo.tsx":"5","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Views\\Home.tsx":"6","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Views\\Thanks.tsx":"7","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormCheck.tsx":"8","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Icons\\Clinic.tsx":"9","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Icons\\Security.tsx":"10","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Icons\\Mobile.tsx":"11","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Icons\\Money.tsx":"12","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormInfoDni.tsx":"13","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormChooseProtect.tsx":"14","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormSIgnUp.tsx":"15","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormFamily.tsx":"16"},{"size":501,"mtime":1611182483043,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1829,"mtime":1611247394605,"results":"20","hashOfConfig":"18"},{"size":1670,"mtime":1611186996339,"results":"21","hashOfConfig":"18"},{"size":1895,"mtime":1611200407860,"results":"22","hashOfConfig":"18"},{"size":3274,"mtime":1611188549732,"results":"23","hashOfConfig":"18"},{"size":2463,"mtime":1611242571808,"results":"24","hashOfConfig":"18"},{"size":9643,"mtime":1611245018483,"results":"25","hashOfConfig":"18"},{"size":931,"mtime":1611184990707,"results":"26","hashOfConfig":"18"},{"size":590,"mtime":1611185014823,"results":"27","hashOfConfig":"18"},{"size":864,"mtime":1611184998529,"results":"28","hashOfConfig":"18"},{"size":2028,"mtime":1611185005068,"results":"29","hashOfConfig":"18"},{"size":10146,"mtime":1611244017747,"results":"30","hashOfConfig":"18"},{"size":7251,"mtime":1611242560340,"results":"31","hashOfConfig":"18"},{"size":4818,"mtime":1611244041510,"results":"32","hashOfConfig":"18"},{"size":4899,"mtime":1611248502116,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1uaffkn",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\index.tsx",[],["75","76"],"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\reportWebVitals.ts",[],"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\App.tsx",[],"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Views\\ChoosePlan.tsx",["77"],"import React from 'react';\r\n\r\n// component\r\nimport FormChooseProtect from './../Components/FormChooseProtect';\r\n\r\n// material ui\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\n// imgs\r\nimport BgRedBig from './../Assets/Basebgbig.png';\r\nimport BgRedThin from './../Assets/Basebgthin.png';\r\nimport Family from './../Assets/family.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    \"& .bgRedBig\": {\r\n      zIndex: \"1\",\r\n      position: \"absolute\"\r\n    }\r\n  },\r\n  imgBgRedBig: {\r\n    height: \"47vh\",\r\n    width: \"60vw\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      height: \"100vh\",\r\n      width: \"30vw\",\r\n    },\r\n  },\r\n  formContainer: {\r\n    justifyContent: \"center\",\r\n    marginTop: \"40px\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: \"0px\",\r\n    },\r\n  }\r\n}))\r\n\r\nfunction ChoosePlan() {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className=\"bgRedBig\">\r\n        <img src={BgRedBig} alt=\"logo\" className={classes.imgBgRedBig} />\r\n      </div>\r\n      <Grid container spacing={0} className='main__container'>\r\n        <Grid container item lg={2} md={2} sm={5} xs={4} spacing={0} className='home__content' alignItems=\"center\">\r\n        </Grid>\r\n        <Grid container item lg={2} md={2} sm={7} xs={8} className='home__img' alignItems=\"center\">\r\n          <img src={Family} alt=\"logo\" />\r\n        </Grid>\r\n        <Grid container item lg={8} md={8} sm={12} xs={12} alignItems=\"center\" className={classes.formContainer}>\r\n          <FormChooseProtect />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChoosePlan;","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Views\\ConfirmInfo.tsx",["78","79","80"],"import React, { useState, useContext, createContext } from 'react';\r\nimport { Context } from '../App'\r\n\r\n// components\r\nimport FormInfoDNI from './../Components/FormInfoDni';\r\nimport FormSignUp from '../Components/FormSIgnUp';\r\n\r\n// material ui\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\n// imgs\r\nimport BgRedBig from './../Assets/Basebgbig.png';\r\nimport BgRedThin from './../Assets/Basebgthin.png';\r\nimport Family from './../Assets/family.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    \"& .bgRedBig\": {\r\n      zIndex: \"1\",\r\n      position: \"absolute\"\r\n    }\r\n  },\r\n  imgBgRedBig: {\r\n    height: \"47vh\",\r\n    width: \"60vw\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      height: \"100vh\",\r\n      width: \"30vw\",\r\n    },\r\n  },\r\n  formContainer: {\r\n    justifyContent: \"center\",\r\n    marginTop: \"40px\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: \"0px\",\r\n    },\r\n  }\r\n}))\r\n\r\nfunction ConfirmInfo() {\r\n  const { userExist } = useContext(Context)\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className=\"bgRedBig\">\r\n        <img src={BgRedBig} alt=\"logo\" className={classes.imgBgRedBig} />\r\n      </div>\r\n      <Grid container spacing={0} className='main__container'>\r\n        <Grid container item lg={2} md={2} sm={5} xs={4} spacing={0} className='home__content' alignItems=\"center\">\r\n        </Grid>\r\n        <Grid container item lg={2} md={2} sm={7} xs={8} className='home__img' alignItems=\"center\">\r\n          <img src={Family} alt=\"logo\" />\r\n        </Grid>\r\n        <Grid container item lg={8} md={8} sm={12} xs={12} alignItems=\"center\" className={classes.formContainer}>\r\n        {userExist? \r\n          <FormInfoDNI/>\r\n          : <FormSignUp/>      \r\n        }\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConfirmInfo;","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Views\\Home.tsx",["81"],"import React from 'react';\r\n\r\n// components\r\nimport FormCheck from './../Components/FormCheck'\r\n\r\n// material ui\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\n// imgs\r\nimport BgRedBig from './../Assets/Basebgbig.png';\r\nimport BgRedThin from './../Assets/Basebgthin.png';\r\nimport Family from './../Assets/family.png';\r\nimport Mobile from './../Icons/Mobile';\r\nimport Security from './../Icons/Security';\r\nimport Clinic from './../Icons/Clinic';\r\nimport Money from './../Icons/Money';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  home: {\r\n    \"& .BgRedBig\": {\r\n      zIndex: \"1\",\r\n      position: \"absolute\"\r\n    }\r\n  },\r\n  imgBgRedBig: {\r\n    height: \"65vh\",\r\n    width: \"100vw\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      height: \"90vh\",\r\n      width: \"50vw\",\r\n    },\r\n  },\r\n  titleWhite: {\r\n    fontSize: \"50px\",\r\n    color: \"#fff\",\r\n    fontWeight: 300,\r\n    \"& span\": {\r\n      fontWeight: 600,\r\n      display: \"block\"\r\n    },\r\n    \"& p\": {\r\n      color: \"#fff\"\r\n    }\r\n  },\r\n  items: {\r\n    color: \"#fff\",\r\n    lineHeight: \"25px\",\r\n    \"& img\": {\r\n      with: '22px',\r\n      height: '22px',\r\n      position: 'relative',\r\n      top: '5px',\r\n      paddingRight: '5px'\r\n    }\r\n  },\r\n  homeForm: {\r\n    justifyContent: \"center\",\r\n    marginTop: \"20px\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: \"0px\",\r\n    },\r\n    \"& h2\": {\r\n      color: \"#494F66\",\r\n      fontWeight: 400,\r\n      fontSize: \"30px\",\r\n      \"& span\": {\r\n        color: \"#EF3340\",\r\n        fontWeight: 600,\r\n      }\r\n    },\r\n    \"& p\": {\r\n      color: \"#C5CBE0\"\r\n    }\r\n  }\r\n}));\r\n\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.home}>\r\n      <div className=\"BgRedBig\">\r\n        <img src={BgRedBig} alt=\"logo\" className={classes.imgBgRedBig} />\r\n      </div>\r\n      <Grid container spacing={0} className='home__container main__container'>\r\n        <Grid container item lg={3} md={3} sm={6} xs={9} spacing={0} className='home__content' alignItems=\"center\">\r\n          <div>\r\n            <h1 className={classes.titleWhite}>Seguro de <span>Salud</span></h1>\r\n            <div className={classes.items}>\r\n              <p>\r\n                <Security/>\r\n                Cómpralo de manera fácil y rápida\r\n              </p>\r\n              <p>\r\n              <Mobile/>\r\n              Cotiza y compra tu seguro 100% digital</p>\r\n              <span></span>\r\n              <p>\r\n              <Money/>\r\n                Hasta S/. 12 millones de cobertura anual\r\n              </p>\r\n              <p>\r\n              <Clinic/>\r\n                Más de 300 clientes en todo el Perú\r\n                </p>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid container item lg={4} md={3} sm={4} xs={2} spacing={0} className='home__img' alignItems=\"flex-end\">\r\n          <img src={Family} alt=\"logo\" />\r\n        </Grid>\r\n        <Grid container item lg={4} md={4} sm={12} xs={12} spacing={0} alignItems=\"center\" className={classes.homeForm}>\r\n          <div>\r\n            <h2>Obten tu <span>seguro ahora</span></h2>\r\n            <p>Ingresa los datos para comenzar</p>\r\n            <FormCheck />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Views\\Thanks.tsx",["82","83"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Context } from './../App'\r\n\r\n// material ui\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n// imgs\r\nimport BgRedBig from './../Assets/Basebgbig.png';\r\nimport BgRedThin from './../Assets/Basebgthin.png';\r\nimport Family from './../Assets/family.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    \"& .bgRedBig\": {\r\n      zIndex: \"1\",\r\n      position: \"absolute\"\r\n    }\r\n  },\r\n  imgBgRedBig: {\r\n    height: \"47vh\",\r\n    width: \"60vw\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      height: \"100vh\",\r\n      width: \"30vw\",\r\n    },\r\n  },\r\n  textContainer: {\r\n    \"& h1\": {\r\n      color: \"#6E7385\",\r\n      \"& span\": {\r\n        color: \"#EF3340\"\r\n      }\r\n    },\r\n    \"& p\": {\r\n      color: \"#C5CBE0\",\r\n      \"& span\": {\r\n        fontWeight: \"600\"\r\n      }\r\n    }\r\n  }\r\n}))\r\n\r\nfunction Thanks() {\r\n  const classes = useStyles()\r\n  const { setData, setStep, setDataResponse, finalData, setFinalData } = useContext(Context)\r\n  const goInitial = () => {\r\n    setData(undefined)\r\n    setDataResponse(undefined)\r\n    setFinalData(undefined)\r\n    setStep(0)\r\n\r\n  }\r\n  useEffect(() => {\r\n    console.log(finalData);\r\n    \r\n  }, [finalData])\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className=\"bgRedBig\">\r\n        <img src={BgRedBig} alt=\"fondo rojo\" className={classes.imgBgRedBig} />\r\n      </div>\r\n      <Grid container spacing={0} className='main__container'>\r\n        <Grid container item lg={2} md={2} sm={5} xs={4} spacing={0} className='home__content' alignItems=\"center\">\r\n        </Grid>\r\n        <Grid container item lg={2} md={2} sm={7} xs={8} className='home__img' alignItems=\"center\">\r\n          <img src={Family} alt=\"imagen de familia\" />\r\n        </Grid>\r\n        <Grid container item lg={8} md={8} sm={12} xs={12} alignItems=\"center\">\r\n          <div className={classes.textContainer}>\r\n            <h1>!Gracias por <span>confiar en nosotros!</span></h1>\r\n            <p>Queremos conocer mejor la salud de los asegurados. un asesor <span>se pondrá en contacto </span> contigoen las siguientes <span>48 horas</span></p>\r\n          </div>\r\n          <div>\r\n            <Button className=\"form__button\" onClick={goInitial}>IR A SALUD</Button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Thanks;","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormCheck.tsx",["84","85","86"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Context } from '../App'\r\n\r\n// material ui\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n// form\r\nimport * as Yup from 'yup'\r\nimport { useFormik } from 'formik'\r\n\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    maxWidth: \"400px\"\r\n  },\r\n  inputDNI: {\r\n    \"& .MuiOutlinedInput-root\": {\r\n      borderRadius: \"4px 0 0 4px\",\r\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        borderColor: \"rgba(0, 0, 0, 0.23)\",\r\n        borderWidth: \"1px\"\r\n      }\r\n    },\r\n\r\n  },\r\n  inputText: {\r\n    \"& .MuiFilledInput-root\": {\r\n      backgroundColor: '#fff',\r\n    },\r\n    \"& .MuiFilledInput-underline:before\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiFilledInput-underline:after\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiFormLabel-root.Mui-focused\": {\r\n      color: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n    \"&.MuiFormControl-root\": {\r\n      border: \"1px solid #C4C4C4\",\r\n      borderRadius: \"0 4px 4px 0\"\r\n    },\r\n    \"& .MuiFilledInput-input\": {\r\n      padding: \"25px 14.5px 10px\"\r\n    }\r\n  },\r\n  inputDate: {\r\n    width: \"100%\",\r\n    \"& .MuiFilledInput-root\": {\r\n      backgroundColor: '#fff',\r\n    },\r\n    \"& .MuiInput-underline:before\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiFormLabel-root.Mui-focused\": {\r\n      color: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n    \"&.MuiFormControl-root\": {\r\n      border: \"1px solid #C4C4C4\",\r\n      borderRadius: \"4px\",\r\n    },\r\n    \"& .MuiInputLabel-formControl\": {\r\n      left: \"15px\",\r\n    }\r\n  },\r\n  inputRegular: {\r\n    width: \"100%\",\r\n    marginTop: '8px',\r\n    \"& .MuiFilledInput-root\": {\r\n      backgroundColor: '#fff',\r\n    },\r\n    \"& .MuiFilledInput-underline:before\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiFilledInput-underline:after\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiFormLabel-root.Mui-focused\": {\r\n      color: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n    \"&.MuiFormControl-root\": {\r\n      border: \"1px solid #C4C4C4\",\r\n      borderRadius: \"4px\"\r\n    },\r\n    \"& .MuiFilledInput-input\": {\r\n      padding: \"25px 14.5px 10px\"\r\n    }\r\n  },\r\n  checkbox: {\r\n    marginTop: '10px',\r\n    \"& .MuiTypography-body1\": {\r\n      fontSize: \"12px\",\r\n      color: \"#C5CBE0\",\r\n    },\r\n    \"& .MuiCheckbox-colorSecondary.Mui-checked\": {\r\n      color: \"#83CC5E\"\r\n    }\r\n  }\r\n}));\r\n\r\nconst Schema = Yup.object().shape({\r\n  typeDocument: Yup.string()\r\n    .required(''),\r\n  numberDocument: Yup.string()\r\n    .required('').nullable(),\r\n  birthDate: Yup.date().required(''),\r\n  cellphone: Yup.string()\r\n    .required('').nullable(),\r\n  protection: Yup.boolean().oneOf([true], \"Aceptar los términos y condiciones\"),\r\n  comercial: Yup.boolean().oneOf([true], \"Aceptar los términos y condiciones\"),\r\n});\r\n\r\ntype InitialValues = {\r\n  names: string;\r\n  firstLastName: string;\r\n  secondLastName: string;\r\n  typeDocument: string;\r\n  numberDocument: number | null;\r\n  birthDate: Date | null;\r\n  cellphone: number | null;\r\n  gender: string;\r\n  protection: boolean;\r\n  comercial: boolean;\r\n  typeInsurance: string\r\n}\r\n\r\n\r\n\r\nconst FormCheck = () => {\r\n  const classes = useStyles();\r\n  const { setStep, dataResponse, setDataResponse, setUserExist } = useContext(Context)\r\n  const [verify, setVerify] = useState<boolean>(false);\r\n  const initialValues: InitialValues = {\r\n    names: '',\r\n    firstLastName: '',\r\n    secondLastName: '',\r\n    typeDocument: 'DNI',\r\n    numberDocument: null,\r\n    birthDate: null,\r\n    cellphone: null,\r\n    gender: '',\r\n    protection: false,\r\n    comercial: false,\r\n    typeInsurance: ''\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      // setData(values)\r\n      setDataResponse(values)\r\n      getData()\r\n      resetForm()\r\n      setStep(1)\r\n    }\r\n  })\r\n\r\n  const documentType = [\r\n    {\r\n      value: 'DNI',\r\n      label: 'DNI',\r\n    },\r\n    {\r\n      value: 'C.E',\r\n      label: 'C.E',\r\n    }\r\n  ];\r\n\r\n  const getData = async () => {\r\n    // create repleace response because post get this message: \"The owner of this Sandbox has exceeded their requests limit. Upgrade plans to re-enable access.\"\r\n\r\n    const response = {\r\n      \"names\": \"FREDY LUIS\",\r\n      \"firstLastName\": \"LOPEZ\",\r\n      \"secondLastName\": \"MARTINEZ\",\r\n      \"cellphone\": 998765432,\r\n      \"gender\": \"M\",\r\n      \"typeDocument\": \"DNI\",\r\n      \"numberDocument\": 25343476,\r\n      \"birthDate\": \"11/05/1972\"\r\n    }\r\n    setDataResponse({response})\r\n    console.log(formik.values);\r\n    console.log(initialValues);\r\n    \r\n    \r\n    if(response.numberDocument === formik.values.numberDocument) {\r\n      setDataResponse({...initialValues,...response, protection: formik.values.protection, comercial: formik.values.comercial})\r\n      setUserExist(true)\r\n    } else {\r\n      setDataResponse({...initialValues, ...formik.values, names: initialValues.names, typeInsurance: initialValues.typeInsurance})  \r\n      setUserExist(false)  \r\n    }\r\n      \r\n  //   const baseURL = `https://freestyle.getsandbox.com/dummy/obtenerdatospersona`\r\n  //   if (\r\n  //     formik.isValid\r\n  //   ) {\r\n  //     try {\r\n  //       await axios.post(baseURL, {})\r\n  //       .then(res => {\r\n  //         console.log(res);\r\n  //         console.log(res.data);\r\n  //         setDataResponse(res.data)\r\n  //       })\r\n  //   } catch (error) {\r\n  //         console.log('Ocurrió un error, lo revisaremos');\r\n  //       }\r\n  // } else {\r\n  //   setVerify(true)\r\n  // }\r\n}\r\n  useEffect(() => {\r\n    if (dataResponse) {\r\n      formik.setValues(dataResponse)\r\n    } else {\r\n      (() => formik.validateForm())();\r\n    }\r\n  }, [dataResponse])\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit} className={classes.form}>\r\n      <div>\r\n        <TextField\r\n          id=\"typeDocument\"\r\n          select\r\n          name=\"typeDocument\"\r\n          value={formik.values.typeDocument}\r\n          onChange={formik.handleChange}\r\n          variant=\"outlined\"\r\n          error={Boolean(formik.errors.typeDocument)}\r\n          helperText={formik.errors.typeDocument}\r\n          className={classes.inputDNI}\r\n        >\r\n          {documentType.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n\r\n        <TextField\r\n          id=\"numberDocument\"\r\n          name=\"numberDocument\"\r\n          label=\"Número de documento\"\r\n          variant=\"filled\"\r\n          value={formik.values.numberDocument || ''}\r\n          onChange={formik.handleChange}\r\n          type='number'\r\n          error={Boolean(formik.errors.numberDocument)}\r\n          helperText={formik.errors.numberDocument}\r\n          className={classes.inputText}\r\n        />\r\n      </div>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Grid container>\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"MM/dd/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"birthDate\"\r\n            name=\"birthDate\"\r\n            label=\"Fecha de nacimiento\"\r\n            value={formik.values.birthDate}\r\n            error={Boolean(formik.errors.birthDate)}\r\n            onChange={value => formik.setFieldValue(\"birthDate\", value)}\r\n            className={classes.inputDate}\r\n          />\r\n        </Grid>\r\n      </MuiPickersUtilsProvider>\r\n\r\n      <TextField\r\n        label=\"Celular\"\r\n        id=\"cellphone\"\r\n        name=\"cellphone\"\r\n        variant=\"filled\"\r\n        type=\"number\"\r\n        value={formik.values.cellphone || ''}\r\n        error={Boolean(formik.errors.cellphone)}\r\n        helperText={formik.errors.cellphone}\r\n        onChange={formik.handleChange}\r\n        className={classes.inputRegular}\r\n      />\r\n\r\n      <FormControlLabel\r\n        name=\"protection\"\r\n        id=\"protection\"\r\n        className={classes.checkbox}\r\n        control={\r\n          <Checkbox\r\n            checked={formik.values.protection}\r\n            onChange={formik.handleChange}\r\n            inputProps={{ 'aria-label': 'primary checkbox' }}\r\n          />\r\n        }\r\n        label=\"Acepto la Política de Protección de Datos Personales y los Términos y Condiciones\"\r\n      />\r\n\r\n      <FormControlLabel\r\n        name=\"comercial\"\r\n        id=\"comercial\"\r\n        className={classes.checkbox}\r\n        control={\r\n          <Checkbox\r\n            checked={formik.values.comercial}\r\n            onChange={formik.handleChange}\r\n            inputProps={{ 'aria-label': 'primary checkbox' }}\r\n          />\r\n        }\r\n        label=\"Acepto la Política de Envío de Comunicaciones Comerciales\"\r\n      />\r\n      {/* {!formik.isValid && (\r\n        <span>Complete los datos solicitados</span>\r\n      )} */}\r\n      {verify && (\r\n        <span>Vuelva a verificar sus datos </span>\r\n      )}\r\n      <div>\r\n        <Button type=\"submit\" disabled={!formik.isValid} className={`form__button ${formik.isValid ? \"form__button--salud\" : \"form__button--disabled\"}`}>\r\n          COMENCEMOS\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default FormCheck","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Icons\\Clinic.tsx",[],"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Icons\\Security.tsx",[],"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Icons\\Mobile.tsx",[],"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Icons\\Money.tsx",[],"C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormInfoDni.tsx",["87","88","89"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Context } from '../App'\r\n\r\n//components\r\nimport FormFamily from './FormFamily';\r\n\r\n// material ui\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n// form\r\nimport * as Yup from 'yup'\r\nimport { useFormik } from 'formik'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputDNI: {\r\n    \"& .MuiOutlinedInput-root\": {\r\n      borderRadius: \"4px 0 0 4px\",\r\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        borderColor: \"rgba(0, 0, 0, 0.23)\",\r\n        borderWidth: \"1px\"\r\n      }\r\n    },\r\n  },\r\n  inputText: {\r\n    \"& .MuiFilledInput-root\": {\r\n      backgroundColor: '#fff',\r\n    },\r\n    \"& .MuiFilledInput-underline:before\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiFilledInput-underline:after\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiFormLabel-root.Mui-focused\": {\r\n      color: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n    \"&.MuiFormControl-root\": {\r\n      border: \"1px solid #C4C4C4\",\r\n      borderRadius: \"0 4px 4px 0\"\r\n    },\r\n    \"& .MuiFilledInput-input\": {\r\n      padding: \"25px 14.5px 10px\"\r\n    }\r\n  },\r\n  inputDate: {\r\n    width: \"100%\",\r\n    \"& .MuiFilledInput-root\": {\r\n      backgroundColor: '#fff',\r\n    },\r\n    \"& .MuiInput-underline:before\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiFormLabel-root.Mui-focused\": {\r\n      color: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n    \"&.MuiFormControl-root\": {\r\n      border: \"1px solid #C4C4C4\",\r\n      borderRadius: \"4px\",\r\n    },\r\n    \"& .MuiInputLabel-formControl\": {\r\n      left: \"15px\",\r\n    }\r\n  },\r\n  inputRegular: {\r\n    width: \"100%\",\r\n    marginTop: '8px',\r\n    \"& .MuiFilledInput-root\": {\r\n      backgroundColor: '#fff',\r\n    },\r\n    \"& .MuiFilledInput-underline:before\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiFilledInput-underline:after\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiFormLabel-root.Mui-focused\": {\r\n      color: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n    \"&.MuiFormControl-root\": {\r\n      border: \"1px solid #C4C4C4\",\r\n      borderRadius: \"4px\"\r\n    },\r\n    \"& .MuiFilledInput-input\": {\r\n      padding: \"25px 14.5px 10px\"\r\n    }\r\n  },\r\n  inputRadio: {\r\n    marginTop: \"15px\",\r\n    \"& .MuiRadio-colorSecondary.Mui-checked\": {\r\n      color: \"#83CC5E\"\r\n    }\r\n  },\r\n  indications: {\r\n    \"& h1\":{\r\n      color: '#494F66',\r\n      \"& span\": {\r\n        color: \"#EF3340\",\r\n        textTransform: 'capitalize'\r\n      }\r\n    },\r\n    \"& p:nth-of-type(1)\": {\r\n      color: \"#676F8F\",\r\n      fontWeight: \"300\",\r\n      fontSize: \"16px\"\r\n    },\r\n    \"& p:nth-of-type(2)\": {\r\n      color: \"#494F66\",\r\n      fontSize: \"20px\"\r\n    }\r\n\r\n  }\r\n}))\r\nconst Schema = Yup.object().shape({\r\n  typeDocument: Yup.string()\r\n    .required('Completar campo'),\r\n  numberDocument: Yup.string()\r\n    // .min(8, 'Too Short!')\r\n    // .max(15, 'Too Long!')\r\n    .required('Completar campo').nullable(),\r\n  names: Yup.string()\r\n    .required('Completar campo'),\r\n  firstLastName: Yup.string()\r\n    .required('Completar campo'),\r\n  secondLastName: Yup.string()\r\n    .required('Completar campo'),\r\n  birthDate: Yup.date().required('Completar campo'),\r\n  typeInsurance: Yup.string().required('Seleccionar el tipo de seguro')\r\n});\r\n\r\ntype InitialValues = {\r\n  typeDocument: string;\r\n  numberDocument: number | null;\r\n  names: string,\r\n  firstLastName: string,\r\n  secondLastName: string,\r\n  birthDate: Date | null,\r\n  gender: string,\r\n  typeInsurance: string\r\n}\r\n\r\n\r\nconst FormInfoDNI = () => {\r\n\r\n  const classes = useStyles()\r\n  const { setStep, dataResponse, setDataResponse, userExist } = useContext(Context)\r\n\r\n  const initialValues: InitialValues = {\r\n    typeDocument: '2',\r\n    numberDocument: null,\r\n    names: '',\r\n    firstLastName: '',\r\n    secondLastName: '',\r\n    birthDate: null,\r\n    gender: '',\r\n    typeInsurance: ''\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      // setDataComplement(values)\r\n      setDataResponse(values)\r\n      setStep(2)\r\n    }\r\n  })\r\n\r\n  const documentType = [\r\n    {\r\n      value: 'DNI',\r\n      label: 'DNI',\r\n    },\r\n    {\r\n      value: 'C.E',\r\n      label: 'C.E',\r\n    }\r\n  ];\r\n\r\n  const backInitial = () => setStep(0)\r\n\r\n  useEffect(() => {\r\n    // (() => formik.validateForm())();\r\n    console.log(dataResponse);\r\n    \r\n    // let dataFormik\r\n    if (dataResponse && userExist) {\r\n      formik.setValues(dataResponse)\r\n    //   dataFormik = {\r\n    //     // ...dataResponse.response,\r\n    //     ...dataResponse\r\n    //     // typeInsurance: formik.values.typeInsurance\r\n    //   }    \r\n    //   formik.setValues(dataFormik)  \r\n    // } else {\r\n    //   formik.setValues(dataResponse)\r\n    }\r\n  }, [dataResponse])\r\n\r\n  return (\r\n    <div className='form__container'>\r\n      <div className='next-step'>\r\n        <span onClick={backInitial}> <ArrowBackIosIcon style={{ fontSize: 12, color: '#EF3340' }} /></span>\r\n        <span>Paso 1 </span>\r\n        <span>de 7</span>\r\n      </div>\r\n      <div className={classes.indications}>\r\n        <h1>Hola, <span>{dataResponse.names}</span></h1>\r\n        <p>Valida que los datos sean correctos</p>\r\n        <p>Datos personales del titular</p>\r\n      </div>\r\n      <div className='form__content'>\r\n        <form onSubmit={formik.handleSubmit} >\r\n          <TextField\r\n            id=\"typeDocument\"\r\n            select\r\n            name=\"typeDocument\"\r\n            value={formik.values.typeDocument}\r\n            onChange={formik.handleChange}\r\n            variant=\"outlined\"\r\n            error={Boolean(formik.errors.typeDocument)}\r\n            helperText={formik.errors.typeDocument}\r\n            className={classes.inputDNI}\r\n          >\r\n            {documentType.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n\r\n          <TextField\r\n            id=\"numberDocument\"\r\n            name=\"numberDocument\"\r\n            label=\"Número de documento\"\r\n            variant=\"filled\"\r\n            value={formik.values.numberDocument || ''}\r\n            onChange={formik.handleChange}\r\n            type='number'\r\n            error={Boolean(formik.errors.numberDocument)}\r\n            helperText={formik.errors.numberDocument}\r\n            className={classes.inputText}\r\n          />\r\n          <TextField id=\"names\" name=\"names\" onChange={formik.handleChange} value={formik.values.names} label=\"Nombres\" variant=\"filled\" className={classes.inputRegular} />\r\n          <TextField id=\"firstLastName\" name=\"firstLastName\" onChange={formik.handleChange} value={formik.values.firstLastName} label=\"Apellido Paterno\" variant=\"filled\" className={classes.inputRegular} />\r\n          <TextField id=\"secondLastName\" name=\"secondLastName\" onChange={formik.handleChange} value={formik.values.secondLastName} label=\"Apellido Materno\" variant=\"filled\" className={classes.inputRegular} />\r\n\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container justify=\"space-around\">\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                format=\"MM/dd/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"birthDate\"\r\n                name=\"birthDate\"\r\n                label=\"Fecha de nacimiento\"\r\n                value={formik.values.birthDate}\r\n                error={Boolean(formik.errors.birthDate)}\r\n                onChange={value => formik.setFieldValue(\"birthDate\", value)}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n                className={classes.inputDate}\r\n              />\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n          <FormControl component=\"fieldset\" className={classes.inputRadio}>\r\n            <FormLabel component=\"legend\">Género</FormLabel>\r\n            <RadioGroup id=\"gender\" aria-label=\"gender\" name=\"gender\" value={formik.values.gender} onChange={formik.handleChange}>\r\n              <FormControlLabel value=\"F\" control={<Radio />} label=\"Femenino\" />\r\n              <FormControlLabel value=\"M\" control={<Radio />} label=\"Masculino\" />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <FormControl component=\"fieldset\" className={classes.inputRadio}>\r\n            <FormLabel component=\"legend\">¿A quiénes vamos a asegurar?</FormLabel>\r\n            <RadioGroup id=\"typeInsurance\" aria-label=\"typeInsurance\" name=\"typeInsurance\" value={formik.values.typeInsurance} onChange={formik.handleChange}>\r\n              <FormControlLabel value=\"me\" control={<Radio />} label=\"Solo a mí\" />\r\n              <FormControlLabel value=\"family\" control={<Radio />} label=\"A mí y a mi familia\" />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {/* {formik.errors.typeInsurance && (\r\n                  <span>{formik.errors.typeInsurance}</span>\r\n              )} */}\r\n          <FormFamily/>\r\n          <Button type=\"submit\" disabled={!formik.isValid} className={`form__button ${formik.isValid ? \"form__button--salud\" : \"form__button--disabled\"}`}>\r\n            Continuar <NavigateNextIcon />\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default FormInfoDNI","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormChooseProtect.tsx",["90","91","92","93","94"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Context } from '../App'\r\n\r\n// material ui\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\n\r\n// form\r\nimport * as Yup from 'yup'\r\nimport { useFormik } from 'formik'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formText: {\r\n    \"& h2\": {\r\n      color: \"#C5CBE0\",\r\n      fontWeight: '400',\r\n      \"& span\": {\r\n        color: \"#EF3340\"\r\n      }\r\n    },\r\n    \"& p\": {\r\n      color: \"#C5CBE0\"\r\n    }\r\n  },\r\n  formContent: {\r\n    marginLeft: \"30px\"\r\n  },\r\n  inputRadio: {\r\n    \"& .MuiRadio-colorSecondary.Mui-checked\": {\r\n      color: \"#83CC5E\"\r\n    }\r\n  },\r\n  radioContainer: {\r\n    \"& div:nth-child(1)\": {\r\n      width: \"100%\",\r\n      border: \"1px solid #C5CBE0\",\r\n      borderRadius: \"4px\",\r\n      padding: \"4px\",\r\n      margin: \"20px 5px\"\r\n    },\r\n    \"& p\": {\r\n      margin: \"8px 0 0 0\"\r\n    },\r\n    \"& p:nth-of-type(odd)\": {\r\n      color: \"#6E7385\",\r\n      fontWeight: \"400\",\r\n      fontSize: \"14px\"\r\n    },\r\n    \"& p:nth-of-type(even)\": {\r\n      color: \"#000\",\r\n      fontWeight: \"400\",\r\n      fontSize: \"18px\"\r\n    }\r\n  },\r\n  radioSelected: {\r\n    border: \"1px solid yellow !important\",\r\n  }\r\n}))\r\n\r\nconst Schema = Yup.object().shape({\r\n  insurancePlan: Yup.string().required('Seleccionar plan de salud'),\r\n});\r\n\r\ntype InitialValues = {\r\n  insurancePlan: string;\r\n}\r\ninterface IPlanDetail {\r\n  amount: string,\r\n  titlePlan: string,\r\n  imgSRC: string,\r\n  listItem1: boolean,\r\n  listItem2: boolean,\r\n  listItem3: boolean,\r\n  listItem4: boolean\r\n}\r\n\r\nfunction FormChooseProtect() {\r\n  const classes = useStyles()\r\n\r\n  const { setStep, dataResponse, setFinalData } = useContext(Context)\r\n\r\n  const initialValues: InitialValues = {\r\n    insurancePlan: 'basic',\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      dataResponse.insurancePlan = formik.values.insurancePlan\r\n      setFinalData(dataResponse)\r\n      setStep(3)\r\n    }\r\n  })\r\n\r\n  const backInitial = () => setStep(1)\r\n\r\n  const insurancePlanDetail = {\r\n    basic: {\r\n      amount: '1 MM',\r\n      titlePlan: 'PLAN BÁSICO',\r\n      imgSRC: '1',\r\n      listItem1: false,\r\n      listItem2: false,\r\n      listItem3: false,\r\n      listItem4: false\r\n    },\r\n    advance: {\r\n      amount: '5 MM',\r\n      titlePlan: 'PLAN AVANZADO',\r\n      imgSRC: '2',\r\n      listItem1: true,\r\n      listItem2: true,\r\n      listItem3: false,\r\n      listItem4: false\r\n    },\r\n    premium: {\r\n      amount: '8 MM',\r\n      titlePlan: 'PLAN PREMIUM',\r\n      imgSRC: '2',\r\n      listItem1: true,\r\n      listItem2: true,\r\n      listItem3: true,\r\n      listItem4: false\r\n    },\r\n    full: {\r\n      amount: '10 MM',\r\n      titlePlan: 'PLAN FULL',\r\n      imgSRC: '2',\r\n      listItem1: true,\r\n      listItem2: true,\r\n      listItem3: true,\r\n      listItem4: true\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(dataResponse);\r\n    \r\n  }, [dataResponse])\r\n  return (\r\n    <div className='form__container'>\r\n      <div className='next-step'>\r\n        <span onClick={backInitial}> <ArrowBackIosIcon style={{ fontSize: 12, color: '#EF3340' }} /></span>\r\n        <span>Paso 2 </span>\r\n        <span>de 7</span>\r\n      </div>\r\n      <div className={classes.formText}>\r\n        <h2>Elige <span>tu proteción</span></h2>\r\n        <p>Selecciona tu plan de salud</p>\r\n      </div>\r\n      <div className={classes.formContent}>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <RadioGroup id=\"insurancePlan\" aria-label=\"insurancePlan\" name=\"insurancePlan\" value={formik.values.insurancePlan} onChange={formik.handleChange}>\r\n            <Grid container spacing={2}>\r\n              <Grid container item lg={3} md={3} sm={3} xs={6} className={classes.radioContainer}>\r\n                <div className={`${formik.values.insurancePlan === 'basic' ? \"radio-selected\" : \"\"}`}>\r\n                  <FormControlLabel value=\"basic\" className={classes.inputRadio} control={<Radio />} label=\"\" />\r\n                  <p>BÁSICO</p>\r\n                  <p><span>S/</span><span>160</span></p>\r\n                  <p>mensual</p>\r\n                </div>\r\n              </Grid>\r\n              <Grid container item lg={3} md={3} sm={3} xs={6} className={classes.radioContainer}>\r\n                <div className={`${formik.values.insurancePlan === 'advance' ? \"radio-selected\" : \"\"}`}>\r\n                  <FormControlLabel value=\"advance\" className={classes.inputRadio} control={<Radio />} label=\"\" />\r\n                  <p>AVANZADO</p>\r\n                  <p><span>S/</span><span>200</span></p>\r\n                  <p>mensual</p>\r\n                </div>\r\n              </Grid>\r\n              <Grid container item lg={3} md={3} sm={3} xs={6} className={classes.radioContainer}>\r\n                <div className={`${formik.values.insurancePlan === 'premium' ? \"radio-selected\" : \"\"}`}>\r\n                  <FormControlLabel value=\"premium\" className={classes.inputRadio} control={<Radio />} label=\"\" />\r\n                  <p>PREMIUM</p>\r\n                  <p><span>S/</span><span>250</span></p>\r\n                  <p>mensual</p>\r\n                </div>\r\n              </Grid>\r\n              <Grid container item lg={3} md={3} sm={3} xs={6} className={classes.radioContainer}>\r\n                <div className={`${formik.values.insurancePlan === 'full' ? \"radio-selected\" : \"\"}`}>\r\n                  <FormControlLabel value=\"full\" className={classes.inputRadio} control={<Radio />} label=\"\" />\r\n                  <p>FULL</p>\r\n                  <p><span>S/</span><span>500</span></p>\r\n                  <p>mensual</p>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </RadioGroup>\r\n          {formik.errors.insurancePlan && (\r\n            <span>{formik.errors.insurancePlan}</span>\r\n          )}\r\n          <div>\r\n            <p>Cuentas con estos beneficios</p>\r\n            <div>\r\n              <div>\r\n                <p>Cobertura máxima</p>\r\n                {/* <p>{insurancePlanDetail[{formik.values.insurancePlan}].titlePlan}</p> */}\r\n              </div>\r\n              <div>\r\n                <p>Lima <span>(Zona de cobertura)</span></p>\r\n                <p>+30 clínicas <span>(en red afiliada)</span></p>\r\n                <ul>\r\n                  <li>Médico a domicilio</li>\r\n                  <li>Chequeos prevetivos</li>\r\n                  <li>Reembolso nacional</li>\r\n                  <li>Reembolso internacional</li>\r\n                </ul>\r\n              </div>\r\n              <div>\r\n                <img />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Button type=\"submit\" disabled={!formik.isValid} className={`form__button ${formik.isValid ? \"form__button--salud\" : \"form__button--disabled\"}`}>\r\n            COMPRAR PLAN\r\n              </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default FormChooseProtect","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormSIgnUp.tsx",["95","96","97","98"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Context } from '../App'\r\n\r\n//components \r\nimport FormFamily from './FormFamily';\r\n\r\n// material ui\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\n// form\r\nimport * as Yup from 'yup'\r\nimport { useFormik } from 'formik'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputRegular: {\r\n    width: \"100%\",\r\n    marginTop: '8px',\r\n    \"& .MuiFilledInput-root\": {\r\n      backgroundColor: '#fff',\r\n    },\r\n    \"& .MuiFilledInput-underline:before\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiFilledInput-underline:after\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiFormLabel-root.Mui-focused\": {\r\n      color: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n    \"&.MuiFormControl-root\": {\r\n      border: \"1px solid #C4C4C4\",\r\n      borderRadius: \"4px\"\r\n    },\r\n    \"& .MuiFilledInput-input\": {\r\n      padding: \"25px 14.5px 10px\"\r\n    }\r\n  },\r\n  inputRadio: {\r\n    marginTop: \"15px\",\r\n    \"& .MuiRadio-colorSecondary.Mui-checked\": {\r\n      color: \"#83CC5E\"\r\n    }\r\n  },\r\n  indications: {\r\n    \"& h1\":{\r\n      color: '#494F66',\r\n      \"& span\": {\r\n        color: \"#EF3340\",\r\n        textTransform: 'capitalize'\r\n      }\r\n    },\r\n    \"& p:nth-of-type(1)\": {\r\n      color: \"#676F8F\",\r\n      fontWeight: \"300\",\r\n      fontSize: \"16px\"\r\n    },\r\n    \"& p:nth-of-type(2)\": {\r\n      color: \"#494F66\",\r\n      fontSize: \"20px\",\r\n      marginTop: \"30px\",\r\n      marginBotton: 5\r\n    }\r\n  }\r\n}))\r\n\r\nconst Schema = Yup.object().shape({\r\n  names: Yup.string()\r\n    .required('Completar campo'),\r\n  typeInsurance: Yup.string().required('Seleccionar el tipo de seguro')\r\n});\r\n\r\ntype InitialValues = {\r\n  names: string,\r\n  typeInsurance: string\r\n}\r\n\r\nfunction FormSignUp() {\r\n\r\n  const classes = useStyles()\r\n  const { setStep, dataResponse, setDataResponse, userExist } = useContext(Context)\r\n\r\n  const initialValues: InitialValues = {\r\n    names: '',\r\n    typeInsurance: ''\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      setDataResponse(values)\r\n      setStep(2)\r\n    }\r\n  })\r\n  const backInitial = () => setStep(0)\r\n\r\n  useEffect(() => {\r\n    // (() => formik.validateForm())();\r\n    console.log(dataResponse);\r\n    console.log(!!dataResponse);\r\n    console.log(formik.values);\r\n\r\n    \r\n    // let dataFormik\r\n    if (dataResponse && !userExist) {\r\n      formik.setValues(dataResponse)\r\n    }\r\n  }, [dataResponse])\r\n\r\n  return (\r\n        <div className='form__container'>\r\n      <div className='next-step'>\r\n        <span onClick={backInitial}> <ArrowBackIosIcon style={{ fontSize: 12, color: '#EF3340' }} /></span>\r\n        <span>Paso 1 </span>\r\n        <span>de 7</span>\r\n      </div>\r\n      <div className={classes.indications}>\r\n        <h1>Hola, <span>¡empecemos!</span></h1>\r\n        <p>Cuéntanos un poco sobre ti</p>\r\n        <p>Ingresa tu nombre</p>\r\n      </div>\r\n      <div className='form__content'>\r\n        <form onSubmit={formik.handleSubmit} >\r\n          <TextField id=\"names\" name=\"names\" onChange={formik.handleChange} value={formik.values.names} label=\"Nombres\" variant=\"filled\" className={classes.inputRegular} />\r\n\r\n          <FormControl component=\"fieldset\" className={classes.inputRadio}>\r\n            <FormLabel component=\"legend\">¿A quiénes vamos a asegurar?</FormLabel>\r\n            <RadioGroup id=\"typeInsurance\" aria-label=\"typeInsurance\" name=\"typeInsurance\" value={formik.values.typeInsurance} onChange={formik.handleChange}>\r\n              <FormControlLabel value=\"me\" control={<Radio />} label=\"Solo a mí\" />\r\n              <FormControlLabel value=\"family\" control={<Radio />} label=\"A mí y a mi familia\" />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <FormFamily/>\r\n          {/* {formik.errors.typeInsurance && (\r\n                  <span>{formik.errors.typeInsurance}</span>\r\n              )} */}\r\n          <Button type=\"submit\" disabled={!formik.isValid} className={`form__button ${formik.isValid ? \"form__button--salud\" : \"form__button--disabled\"}`}>\r\n            Continuar <NavigateNextIcon />\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormSignUp;","C:\\Users\\Inteligo\\Desktop\\indra\\indra\\src\\Components\\FormFamily.tsx",["99","100","101","102","103","104","105","106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":12,"column":8,"nodeType":"113","messageId":"114","endLine":12,"endColumn":17},{"ruleId":"111","severity":1,"message":"115","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"116","line":1,"column":39,"nodeType":"113","messageId":"114","endLine":1,"endColumn":52},{"ruleId":"111","severity":1,"message":"112","line":14,"column":8,"nodeType":"113","messageId":"114","endLine":14,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":12,"column":8,"nodeType":"113","messageId":"114","endLine":12,"endColumn":17},{"ruleId":"111","severity":1,"message":"115","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"112","line":12,"column":8,"nodeType":"113","messageId":"114","endLine":12,"endColumn":17},{"ruleId":"111","severity":1,"message":"117","line":22,"column":8,"nodeType":"113","messageId":"114","endLine":22,"endColumn":13},{"ruleId":"111","severity":1,"message":"118","line":147,"column":18,"nodeType":"113","messageId":"114","endLine":147,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":235,"column":6,"nodeType":"121","endLine":235,"endColumn":20,"suggestions":"122"},{"ruleId":"111","severity":1,"message":"115","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"123","line":13,"column":8,"nodeType":"113","messageId":"114","endLine":13,"endColumn":16},{"ruleId":"119","severity":1,"message":"124","line":218,"column":6,"nodeType":"121","endLine":218,"endColumn":20,"suggestions":"125"},{"ruleId":"111","severity":1,"message":"115","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"126","line":9,"column":8,"nodeType":"113","messageId":"114","endLine":9,"endColumn":19},{"ruleId":"111","severity":1,"message":"127","line":75,"column":11,"nodeType":"113","messageId":"114","endLine":75,"endColumn":22},{"ruleId":"111","severity":1,"message":"128","line":106,"column":9,"nodeType":"113","messageId":"114","endLine":106,"endColumn":28},{"ruleId":"129","severity":1,"message":"130","line":219,"column":17,"nodeType":"131","endLine":219,"endColumn":24},{"ruleId":"111","severity":1,"message":"115","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"132","line":9,"column":8,"nodeType":"113","messageId":"114","endLine":9,"endColumn":16},{"ruleId":"111","severity":1,"message":"133","line":11,"column":8,"nodeType":"113","messageId":"114","endLine":11,"endColumn":12},{"ruleId":"119","severity":1,"message":"124","line":119,"column":6,"nodeType":"121","endLine":119,"endColumn":20,"suggestions":"134"},{"ruleId":"111","severity":1,"message":"115","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"135","line":7,"column":8,"nodeType":"113","messageId":"114","endLine":7,"endColumn":24},{"ruleId":"111","severity":1,"message":"133","line":8,"column":8,"nodeType":"113","messageId":"114","endLine":8,"endColumn":12},{"ruleId":"111","severity":1,"message":"123","line":10,"column":8,"nodeType":"113","messageId":"114","endLine":10,"endColumn":16},{"ruleId":"111","severity":1,"message":"136","line":89,"column":11,"nodeType":"113","messageId":"114","endLine":89,"endColumn":18},{"ruleId":"111","severity":1,"message":"137","line":89,"column":34,"nodeType":"113","messageId":"114","endLine":89,"endColumn":49},{"ruleId":"111","severity":1,"message":"138","line":116,"column":9,"nodeType":"113","messageId":"114","endLine":116,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":127,"column":6,"nodeType":"121","endLine":127,"endColumn":20,"suggestions":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"@typescript-eslint/no-unused-vars","'BgRedThin' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'createContext' is defined but never used.","'axios' is defined but never used.","'setVerify' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array.","ArrayExpression",["142"],"'Checkbox' is defined but never used.","React Hook useEffect has missing dependencies: 'formik' and 'userExist'. Either include them or remove the dependency array.",["143"],"'FormControl' is defined but never used.","'IPlanDetail' is defined but never used.","'insurancePlanDetail' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MenuItem' is defined but never used.","'Grid' is defined but never used.",["144"],"'FormControlLabel' is defined but never used.","'setStep' is assigned a value but never used.","'setDataResponse' is assigned a value but never used.","'removeFamilyMember' is assigned a value but never used.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"148","fix":"150"},{"desc":"146","fix":"151"},"Update the dependencies array to be: [dataResponse, formik]",{"range":"152","text":"153"},"Update the dependencies array to be: [dataResponse, formik, userExist]",{"range":"154","text":"155"},{"range":"156","text":"155"},{"range":"157","text":"153"},[6192,6206],"[dataResponse, formik]",[5574,5588],"[dataResponse, formik, userExist]",[3057,3071],[3118,3132]]